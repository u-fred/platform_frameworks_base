package com.android.server.biometrics.sensors;

import android.security.KeyStore;
import android.util.Log;
import android.util.SparseArray;

/**
 * Temporary store for hardware auth tokens that were generated by successful biometric and are
 * waiting for second factor to succeed before being added to KeyStore.
 */
public class BiometricAuthTokenStore {
    // TODO: Zero tokens as soon as they are finished with? I don't think upstream does this.

    private static final String TAG = "BiometricAuthTokenStore";

    private final SparseArray<byte[]> mPendingSecondFactorAuthTokens;
    private final KeyStore mKeyStore;

    public BiometricAuthTokenStore(KeyStore keyStore) {
        mKeyStore = keyStore;
        mPendingSecondFactorAuthTokens = new SparseArray<>();
    }

    public void storePendingAuthToken(int userId, byte[] token) {
        synchronized (mPendingSecondFactorAuthTokens) {
            mPendingSecondFactorAuthTokens.put(userId, token);
        }
    }

    public byte[] getPendingAuthToken(int userId) {
        synchronized (mPendingSecondFactorAuthTokens) {
            return mPendingSecondFactorAuthTokens.get(userId);
        }
    }

    public void clearPendingAuthTokens() {
        synchronized (mPendingSecondFactorAuthTokens) {
            mPendingSecondFactorAuthTokens.clear();
        }
    }

    public boolean addPendingAuthTokenToKeyStore(int userId) {
        synchronized (mPendingSecondFactorAuthTokens) {
            byte[] authToken = getPendingAuthToken(userId);
            if (authToken != null) {
                final int result = mKeyStore.addAuthToken(authToken);
                mPendingSecondFactorAuthTokens.remove(userId);
                if (result == 0 /* success */) {
                    Log.d(TAG, "Success adding auth token");
                    return true;
                } else {
                    Log.d(TAG, "Error adding auth token: " + result);
                }
            }
        }
        return false;
    }
}
